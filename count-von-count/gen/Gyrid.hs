{-# LANGUAGE BangPatterns, DeriveDataTypeable, DeriveGeneric, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC  -fno-warn-unused-imports #-}
module Gyrid (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified GHC.Generics as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)

protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".Gyrid\", haskellPrefix = [], parentModule = [], baseName = MName \"Gyrid\"}, protoFilePath = [\"Gyrid.hs\"], protoSource = \"gyrid.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.Msg\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Msg\"}, descFilePath = [\"Gyrid\",\"Msg.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.type\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.Msg.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"Msg\"], baseName = MName \"Type\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.ack\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"ack\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.cached\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"cached\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.bluetooth_dataIO\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"bluetooth_dataIO\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.Bluetooth_DataIO\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Bluetooth_DataIO\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.bluetooth_dataRaw\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"bluetooth_dataRaw\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.Bluetooth_DataRaw\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Bluetooth_DataRaw\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.bluetooth_stateInquiry\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"bluetooth_stateInquiry\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.Bluetooth_StateInquiry\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Bluetooth_StateInquiry\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.wifi_stateFrequency\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"wifi_stateFrequency\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_StateFrequency\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_StateFrequency\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.wifi_stateFrequencyLoop\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"wifi_stateFrequencyLoop\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_StateFrequencyLoop\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_StateFrequencyLoop\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.wifi_dataRaw\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"wifi_dataRaw\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_DataRaw\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.wifi_dataDevRaw\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"wifi_dataDevRaw\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataDevRaw\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_DataDevRaw\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.wifi_dataIO\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"wifi_dataIO\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 90}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataIO\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_DataIO\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.info\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"info\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.Info\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Info\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.stateScanning\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"stateScanning\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 106}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.StateScanning\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"StateScanning\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.stateGyrid\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"stateGyrid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 114}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.StateGyrid\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"StateGyrid\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.stateAntenna\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"stateAntenna\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 122}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.StateAntenna\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"StateAntenna\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.uptime\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"uptime\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 130}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.Uptime\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Uptime\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.requestKeepalive\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"requestKeepalive\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 138}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.RequestKeepalive\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"RequestKeepalive\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.requestUptime\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"requestUptime\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 144}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.requestCaching\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"requestCaching\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 154}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.RequestCaching\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"RequestCaching\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.requestStartdata\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"requestStartdata\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 20}, wireTag = WireTag {getWireTag = 162}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.RequestStartdata\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"RequestStartdata\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.requestState\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"requestState\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 21}, wireTag = WireTag {getWireTag = 170}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.RequestState\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"RequestState\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.hostname\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"hostname\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 22}, wireTag = WireTag {getWireTag = 178}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.antennaTurn\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"antennaTurn\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 23}, wireTag = WireTag {getWireTag = 186}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.AntennaTurn\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"AntennaTurn\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.scanPattern\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"scanPattern\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 24}, wireTag = WireTag {getWireTag = 194}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.ScanPattern\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"ScanPattern\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Msg.success\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Msg\"], baseName' = FName \"success\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 25}, wireTag = WireTag {getWireTag = 200}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.RequestKeepalive\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"RequestKeepalive\"}, descFilePath = [\"Gyrid\",\"RequestKeepalive.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestKeepalive.interval\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestKeepalive\"], baseName' = FName \"interval\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Just \"60\", hsDefault = Just (HsDef'Integer 60)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestKeepalive.enable\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestKeepalive\"], baseName' = FName \"enable\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.RequestState\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"RequestState\"}, descFilePath = [\"Gyrid\",\"RequestState.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestState.bluetooth_enableInquiry\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestState\"], baseName' = FName \"bluetooth_enableInquiry\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestState.enableScanning\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestState\"], baseName' = FName \"enableScanning\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestState.wifi_enableFrequency\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestState\"], baseName' = FName \"wifi_enableFrequency\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestState.wifi_enableFrequencyLoop\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestState\"], baseName' = FName \"wifi_enableFrequencyLoop\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestState.enableAntenna\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestState\"], baseName' = FName \"enableAntenna\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.RequestCaching\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"RequestCaching\"}, descFilePath = [\"Gyrid\",\"RequestCaching.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestCaching.enableCaching\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestCaching\"], baseName' = FName \"enableCaching\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestCaching.clearCache\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestCaching\"], baseName' = FName \"clearCache\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestCaching.pushCache\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestCaching\"], baseName' = FName \"pushCache\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.RequestStartdata\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"RequestStartdata\"}, descFilePath = [\"Gyrid\",\"RequestStartdata.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestStartdata.enableData\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestStartdata\"], baseName' = FName \"enableData\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestStartdata.enableBluetoothRaw\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestStartdata\"], baseName' = FName \"enableBluetoothRaw\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestStartdata.enableWifiRaw\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestStartdata\"], baseName' = FName \"enableWifiRaw\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestStartdata.enableWifiDevRaw\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestStartdata\"], baseName' = FName \"enableWifiDevRaw\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.RequestStartdata.enableSensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"RequestStartdata\"], baseName' = FName \"enableSensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.Uptime\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Uptime\"}, descFilePath = [\"Gyrid\",\"Uptime.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Uptime.gyridStartup\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Uptime\"], baseName' = FName \"gyridStartup\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Uptime.systemStartup\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Uptime\"], baseName' = FName \"systemStartup\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 17}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.Info\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Info\"}, descFilePath = [\"Gyrid\",\"Info.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Info.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Info\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Info.info\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Info\"], baseName' = FName \"info\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.AntennaTurn\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"AntennaTurn\"}, descFilePath = [\"Gyrid\",\"AntennaTurn.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.AntennaTurn.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"AntennaTurn\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.AntennaTurn.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"AntennaTurn\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 21}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.AntennaTurn.angle\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"AntennaTurn\"], baseName' = FName \"angle\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 29}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.AntennaTurn.fixedTimeBuffer\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"AntennaTurn\"], baseName' = FName \"fixedTimeBuffer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.ScanPattern\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"ScanPattern\"}, descFilePath = [\"Gyrid\",\"ScanPattern.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.action\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"action\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.ScanPattern.Action\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"ScanPattern\"], baseName = MName \"Action\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.startTime\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"startTime\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.stopTime\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"stopTime\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.startAngle\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"startAngle\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.stopAngle\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"stopAngle\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.scanAngle\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"scanAngle\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.inquiryLength\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"inquiryLength\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.bufferTime\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"bufferTime\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.ScanPattern.turnResolution\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"ScanPattern\"], baseName' = FName \"turnResolution\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.StateScanning\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"StateScanning\"}, descFilePath = [\"Gyrid\",\"StateScanning.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.StateScanning.type\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"StateScanning\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.StateScanning.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"StateScanning\"], baseName = MName \"Type\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.StateScanning.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"StateScanning\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 17}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.StateScanning.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"StateScanning\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.StateScanning.hwType\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"StateScanning\"], baseName' = FName \"hwType\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.StateScanning.HwType\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"StateScanning\"], baseName = MName \"HwType\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.StateGyrid\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"StateGyrid\"}, descFilePath = [\"Gyrid\",\"StateGyrid.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.StateGyrid.type\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"StateGyrid\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.StateGyrid.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"StateGyrid\"], baseName = MName \"Type\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.StateAntenna\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"StateAntenna\"}, descFilePath = [\"Gyrid\",\"StateAntenna.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.StateAntenna.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"StateAntenna\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.StateAntenna.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"StateAntenna\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.StateAntenna.angle\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"StateAntenna\"], baseName' = FName \"angle\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 29}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.Bluetooth_StateInquiry\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Bluetooth_StateInquiry\"}, descFilePath = [\"Gyrid\",\"Bluetooth_StateInquiry.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_StateInquiry.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_StateInquiry\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_StateInquiry.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_StateInquiry\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_StateInquiry.duration\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_StateInquiry\"], baseName' = FName \"duration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.Bluetooth_DataIO\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Bluetooth_DataIO\"}, descFilePath = [\"Gyrid\",\"Bluetooth_DataIO.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataIO.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataIO\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 17}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataIO.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataIO\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataIO.hwid\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataIO\"], baseName' = FName \"hwid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataIO.deviceclass\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataIO\"], baseName' = FName \"deviceclass\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataIO.move\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataIO\"], baseName' = FName \"move\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.Bluetooth_DataIO.Move\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"Bluetooth_DataIO\"], baseName = MName \"Move\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.Bluetooth_DataRaw\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"Bluetooth_DataRaw\"}, descFilePath = [\"Gyrid\",\"Bluetooth_DataRaw.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataRaw.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataRaw\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataRaw.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataRaw\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataRaw.hwid\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataRaw\"], baseName' = FName \"hwid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataRaw.deviceclass\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataRaw\"], baseName' = FName \"deviceclass\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataRaw.rssi\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataRaw\"], baseName' = FName \"rssi\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 17}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.Bluetooth_DataRaw.angle\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"Bluetooth_DataRaw\"], baseName' = FName \"angle\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_StateFrequency\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_StateFrequency\"}, descFilePath = [\"Gyrid\",\"WiFi_StateFrequency.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_StateFrequency.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_StateFrequency\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_StateFrequency.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_StateFrequency\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_StateFrequency.frequency\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_StateFrequency\"], baseName' = FName \"frequency\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_StateFrequency.duration\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_StateFrequency\"], baseName' = FName \"duration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_StateFrequencyLoop\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_StateFrequencyLoop\"}, descFilePath = [\"Gyrid\",\"WiFi_StateFrequencyLoop.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_StateFrequencyLoop.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_StateFrequencyLoop\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_StateFrequencyLoop.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_StateFrequencyLoop\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_StateFrequencyLoop.duration\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_StateFrequencyLoop\"], baseName' = FName \"duration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_StateFrequencyLoop.frequency\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_StateFrequencyLoop\"], baseName' = FName \"frequency\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Just (WireTag {getWireTag = 32},WireTag {getWireTag = 34}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataIO\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_DataIO\"}, descFilePath = [\"Gyrid\",\"WiFi_DataIO.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataIO.type\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataIO\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataIO.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataIO\"], baseName = MName \"Type\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataIO.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataIO\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 17}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataIO.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataIO\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataIO.hwid\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataIO\"], baseName' = FName \"hwid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataIO.move\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataIO\"], baseName' = FName \"move\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataIO.Move\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataIO\"], baseName = MName \"Move\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataDevRaw\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_DataDevRaw\"}, descFilePath = [\"Gyrid\",\"WiFi_DataDevRaw.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataDevRaw.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataDevRaw\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataDevRaw.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataDevRaw\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataDevRaw.hwid\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataDevRaw\"], baseName' = FName \"hwid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataDevRaw.frequency\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataDevRaw\"], baseName' = FName \"frequency\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataDevRaw.ssi\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataDevRaw\"], baseName' = FName \"ssi\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 17}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw\", haskellPrefix = [], parentModule = [MName \"Gyrid\"], baseName = MName \"WiFi_DataRaw\"}, descFilePath = [\"Gyrid\",\"WiFi_DataRaw.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.timestamp\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.sensorMac\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"sensorMac\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.frequency\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"frequency\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.pw_mgmt\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"pw_mgmt\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.retry\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"retry\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.frametype\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"frametype\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.FrameType\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName = MName \"FrameType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.mgmt\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"mgmt\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName = MName \"Mgmt\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.ctrl\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"ctrl\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Ctrl\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName = MName \"Ctrl\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.data\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"data'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Data\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName = MName \"Data\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.hwid1\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"hwid1\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.hwid2\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"hwid2\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 90}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.ssi\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName' = FName \"ssi\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 96}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 17}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Data\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName = MName \"Data\"}, descFilePath = [\"Gyrid\",\"WiFi_DataRaw\",\"Data.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.Data.from_ds\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Data\"], baseName' = FName \"from_ds\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.Data.to_ds\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Data\"], baseName' = FName \"to_ds\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Ctrl\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName = MName \"Ctrl\"}, descFilePath = [\"Gyrid\",\"WiFi_DataRaw\",\"Ctrl.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.Ctrl.subType\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Ctrl\"], baseName' = FName \"subType\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Ctrl.SubType\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Ctrl\"], baseName = MName \"SubType\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName = MName \"Mgmt\"}, descFilePath = [\"Gyrid\",\"WiFi_DataRaw\",\"Mgmt.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.Mgmt.subType\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\"], baseName' = FName \"subType\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt.SubType\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\"], baseName = MName \"SubType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.Mgmt.beacon\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\"], baseName' = FName \"beacon\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt.Beacon\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\"], baseName = MName \"Beacon\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.Mgmt.probeReq\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\"], baseName' = FName \"probeReq\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt.ProbeReq\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\"], baseName = MName \"ProbeReq\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt.Beacon\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\"], baseName = MName \"Beacon\"}, descFilePath = [\"Gyrid\",\"WiFi_DataRaw\",\"Mgmt\",\"Beacon.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.Mgmt.Beacon.type\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\",MName \"Beacon\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt.Beacon.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\",MName \"Beacon\"], baseName = MName \"Type\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt.ProbeReq\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\"], baseName = MName \"ProbeReq\"}, descFilePath = [\"Gyrid\",\"WiFi_DataRaw\",\"Mgmt\",\"ProbeReq.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Gyrid.WiFi_DataRaw.Mgmt.ProbeReq.hSsid\", haskellPrefix' = [], parentModule' = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\",MName \"ProbeReq\"], baseName' = FName \"hSsid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.Msg.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"Msg\"], baseName = MName \"Type\"}, enumFilePath = [\"Gyrid\",\"Msg\",\"Type.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"Type_ACK\"),(EnumCode {getEnumCode = 2},\"Type_KEEPALIVE\"),(EnumCode {getEnumCode = 3},\"Type_BLUETOOTH_DATAIO\"),(EnumCode {getEnumCode = 4},\"Type_BLUETOOTH_DATARAW\"),(EnumCode {getEnumCode = 5},\"Type_BLUETOOTH_STATE_INQUIRY\"),(EnumCode {getEnumCode = 6},\"Type_WIFI_STATE_FREQUENCY\"),(EnumCode {getEnumCode = 7},\"Type_WIFI_STATE_FREQUENCYLOOP\"),(EnumCode {getEnumCode = 8},\"Type_WIFI_DATARAW\"),(EnumCode {getEnumCode = 9},\"Type_WIFI_DATADEVRAW\"),(EnumCode {getEnumCode = 10},\"Type_WIFI_DATAIO\"),(EnumCode {getEnumCode = 11},\"Type_INFO\"),(EnumCode {getEnumCode = 12},\"Type_STATE_SCANNING\"),(EnumCode {getEnumCode = 13},\"Type_STATE_GYRID\"),(EnumCode {getEnumCode = 14},\"Type_STATE_ANTENNA\"),(EnumCode {getEnumCode = 15},\"Type_UPTIME\"),(EnumCode {getEnumCode = 16},\"Type_REQUEST_HOSTNAME\"),(EnumCode {getEnumCode = 17},\"Type_REQUEST_KEEPALIVE\"),(EnumCode {getEnumCode = 18},\"Type_REQUEST_UPTIME\"),(EnumCode {getEnumCode = 19},\"Type_REQUEST_CACHING\"),(EnumCode {getEnumCode = 20},\"Type_REQUEST_STARTDATA\"),(EnumCode {getEnumCode = 21},\"Type_REQUEST_STATE\"),(EnumCode {getEnumCode = 22},\"Type_HOSTNAME\"),(EnumCode {getEnumCode = 23},\"Type_ANTENNA_TURN\"),(EnumCode {getEnumCode = 24},\"Type_SCAN_PATTERN\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.ScanPattern.Action\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"ScanPattern\"], baseName = MName \"Action\"}, enumFilePath = [\"Gyrid\",\"ScanPattern\",\"Action.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"Action_ADD\"),(EnumCode {getEnumCode = 2},\"Action_REMOVE\"),(EnumCode {getEnumCode = 3},\"Action_REMOVEALL\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.StateScanning.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"StateScanning\"], baseName = MName \"Type\"}, enumFilePath = [\"Gyrid\",\"StateScanning\",\"Type.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"Type_STARTED\"),(EnumCode {getEnumCode = 2},\"Type_STOPPED\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.StateScanning.HwType\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"StateScanning\"], baseName = MName \"HwType\"}, enumFilePath = [\"Gyrid\",\"StateScanning\",\"HwType.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"HwType_BLUETOOTH\"),(EnumCode {getEnumCode = 2},\"HwType_WIFI\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.StateGyrid.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"StateGyrid\"], baseName = MName \"Type\"}, enumFilePath = [\"Gyrid\",\"StateGyrid\",\"Type.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"Type_CONNECTED\"),(EnumCode {getEnumCode = 2},\"Type_DISCONNECTED\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.Bluetooth_DataIO.Move\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"Bluetooth_DataIO\"], baseName = MName \"Move\"}, enumFilePath = [\"Gyrid\",\"Bluetooth_DataIO\",\"Move.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"Move_IN\"),(EnumCode {getEnumCode = 2},\"Move_OUT\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataIO.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataIO\"], baseName = MName \"Type\"}, enumFilePath = [\"Gyrid\",\"WiFi_DataIO\",\"Type.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"Type_ACCESSPOINT\"),(EnumCode {getEnumCode = 2},\"Type_DEVICE\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataIO.Move\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataIO\"], baseName = MName \"Move\"}, enumFilePath = [\"Gyrid\",\"WiFi_DataIO\",\"Move.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"Move_IN\"),(EnumCode {getEnumCode = 2},\"Move_OUT\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.FrameType\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\"], baseName = MName \"FrameType\"}, enumFilePath = [\"Gyrid\",\"WiFi_DataRaw\",\"FrameType.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"FrameType_MGMT\"),(EnumCode {getEnumCode = 2},\"FrameType_CTRL\"),(EnumCode {getEnumCode = 3},\"FrameType_DATA\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Ctrl.SubType\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Ctrl\"], baseName = MName \"SubType\"}, enumFilePath = [\"Gyrid\",\"WiFi_DataRaw\",\"Ctrl\",\"SubType.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"SubType_PSPOLL\"),(EnumCode {getEnumCode = 2},\"SubType_OTHER\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt.SubType\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\"], baseName = MName \"SubType\"}, enumFilePath = [\"Gyrid\",\"WiFi_DataRaw\",\"Mgmt\",\"SubType.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"SubType_BEACON\"),(EnumCode {getEnumCode = 2},\"SubType_PROBERESP\"),(EnumCode {getEnumCode = 3},\"SubType_PROBEREQ\"),(EnumCode {getEnumCode = 4},\"SubType_DEAUTH\"),(EnumCode {getEnumCode = 5},\"SubType_DISAS\"),(EnumCode {getEnumCode = 6},\"SubType_ATIM\"),(EnumCode {getEnumCode = 7},\"SubType_ASSOREQ\"),(EnumCode {getEnumCode = 8},\"SubType_ASSORESP\"),(EnumCode {getEnumCode = 9},\"SubType_REASSOREQ\"),(EnumCode {getEnumCode = 10},\"SubType_REASSORESP\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Gyrid.WiFi_DataRaw.Mgmt.Beacon.Type\", haskellPrefix = [], parentModule = [MName \"Gyrid\",MName \"WiFi_DataRaw\",MName \"Mgmt\",MName \"Beacon\"], baseName = MName \"Type\"}, enumFilePath = [\"Gyrid\",\"WiFi_DataRaw\",\"Mgmt\",\"Beacon\",\"Type.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"Type_ESS\"),(EnumCode {getEnumCode = 2},\"Type_IBSS\")]}], oneofs = [], knownKeyMap = fromList []}"

fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\178'\n\vgyrid.proto\"\204\f\n\ETXMsg\DC2\GS\n\EOTtype\CAN\SOH \STX(\SO2\SI.Gyrid.Msg.Type\DC2\v\n\ETXack\CAN\STX \SOH(\f\DC2\NAK\n\ACKcached\CAN\ETX \SOH(\b:\ENQfalse\DC21\n\DLEbluetooth_dataIO\CAN\EOT \SOH(\v2\ETB.Gyrid.Bluetooth_DataIO\DC23\n\DC1bluetooth_dataRaw\CAN\ENQ \SOH(\v2\CAN.Gyrid.Bluetooth_DataRaw\DC2=\n\SYNbluetooth_stateInquiry\CAN\ACK \SOH(\v2\GS.Gyrid.Bluetooth_StateInquiry\DC27\n\DC3wifi_stateFrequency\CAN\a \SOH(\v2\SUB.Gyrid.WiFi_StateFrequency\DC2?\n\ETBwifi_stateFrequencyLoop\CAN\b \SOH(\v2\RS.Gyrid.WiFi_StateFrequencyLoop\DC2)\n\fwifi_dataRaw\CAN\t \SOH(\v2\DC3.Gyrid.WiFi_DataRaw\DC2/\n\SIwifi_dataDevRaw\CAN\n \SOH(\v2\SYN.Gyrid.WiFi_DataDevRaw\DC2'\n\vwifi_dataIO\CAN\v \SOH(\v2\DC2.Gyrid.WiFi_DataIO\DC2\EM\n\EOTinfo\CAN\f \SOH(\v2\v.Gyrid.Info\DC2+\n\rstateScanning\CAN\r \SOH(\v2\DC4.Gyrid.StateScanning\DC2%\n\nstateGyrid\CAN\SO \SOH(\v2\DC1.Gyrid.StateGyrid\DC2)\n\fstateAntenna\CAN\SI \SOH(\v2\DC3.Gyrid.StateAntenna\DC2\GS\n\ACKuptime\CAN\DLE \SOH(\v2\r.Gyrid.Uptime\DC21\n\DLErequestKeepalive\CAN\DC1 \SOH(\v2\ETB.Gyrid.RequestKeepalive\DC2\ESC\n\rrequestUptime\CAN\DC2 \SOH(\b:\EOTtrue\DC2-\n\SOrequestCaching\CAN\DC3 \SOH(\v2\NAK.Gyrid.RequestCaching\DC21\n\DLErequestStartdata\CAN\DC4 \SOH(\v2\ETB.Gyrid.RequestStartdata\DC2)\n\frequestState\CAN\NAK \SOH(\v2\DC3.Gyrid.RequestState\DC2\DLE\n\bhostname\CAN\SYN \SOH(\t\DC2'\n\vantennaTurn\CAN\ETB \SOH(\v2\DC2.Gyrid.AntennaTurn\DC2'\n\vscanPattern\CAN\CAN \SOH(\v2\DC2.Gyrid.ScanPattern\DC2\SI\n\asuccess\CAN\EM \SOH(\b\"\208\EOT\n\EOTType\DC2\f\n\bType_ACK\DLE\SOH\DC2\DC2\n\SOType_KEEPALIVE\DLE\STX\DC2\EM\n\NAKType_BLUETOOTH_DATAIO\DLE\ETX\DC2\SUB\n\SYNType_BLUETOOTH_DATARAW\DLE\EOT\DC2 \n\FSType_BLUETOOTH_STATE_INQUIRY\DLE\ENQ\DC2\GS\n\EMType_WIFI_STATE_FREQUENCY\DLE\ACK\DC2!\n\GSType_WIFI_STATE_FREQUENCYLOOP\DLE\a\DC2\NAK\n\DC1Type_WIFI_DATARAW\DLE\b\DC2\CAN\n\DC4Type_WIFI_DATADEVRAW\DLE\t\DC2\DC4\n\DLEType_WIFI_DATAIO\DLE\n\DC2\r\n\tType_INFO\DLE\v\DC2\ETB\n\DC3Type_STATE_SCANNING\DLE\f\DC2\DC4\n\DLEType_STATE_GYRID\DLE\r\DC2\SYN\n\DC2Type_STATE_ANTENNA\DLE\SO\DC2\SI\n\vType_UPTIME\DLE\SI\DC2\EM\n\NAKType_REQUEST_HOSTNAME\DLE\DLE\DC2\SUB\n\SYNType_REQUEST_KEEPALIVE\DLE\DC1\DC2\ETB\n\DC3Type_REQUEST_UPTIME\DLE\DC2\DC2\CAN\n\DC4Type_REQUEST_CACHING\DLE\DC3\DC2\SUB\n\SYNType_REQUEST_STARTDATA\DLE\DC4\DC2\SYN\n\DC2Type_REQUEST_STATE\DLE\NAK\DC2\DC1\n\rType_HOSTNAME\DLE\SYN\DC2\NAK\n\DC1Type_ANTENNA_TURN\DLE\ETB\DC2\NAK\n\DC1Type_SCAN_PATTERN\DLE\CAN\">\n\DLERequestKeepalive\DC2\DC4\n\binterval\CAN\SOH \SOH(\r:\STX60\DC2\DC4\n\ACKenable\CAN\STX \SOH(\b:\EOTtrue\"\192\SOH\n\fRequestState\DC2&\n\ETBbluetooth_enableInquiry\CAN\SOH \SOH(\b:\ENQfalse\DC2\FS\n\SOenableScanning\CAN\STX \SOH(\b:\EOTtrue\DC2#\n\DC4wifi_enableFrequency\CAN\ETX \SOH(\b:\ENQfalse\DC2'\n\CANwifi_enableFrequencyLoop\CAN\EOT \SOH(\b:\ENQfalse\DC2\FS\n\renableAntenna\CAN\ENQ \SOH(\b:\ENQfalse\"b\n\SORequestCaching\DC2\ESC\n\renableCaching\CAN\SOH \SOH(\b:\EOTtrue\DC2\EM\n\nclearCache\CAN\STX \SOH(\b:\ENQfalse\DC2\CAN\n\tpushCache\CAN\ETX \SOH(\b:\ENQfalse\"\173\SOH\n\DLERequestStartdata\DC2\CAN\n\nenableData\CAN\SOH \SOH(\b:\EOTtrue\DC2!\n\DC2enableBluetoothRaw\CAN\STX \SOH(\b:\ENQfalse\DC2\FS\n\renableWifiRaw\CAN\ETX \SOH(\b:\ENQfalse\DC2\US\n\DLEenableWifiDevRaw\CAN\EOT \SOH(\b:\ENQfalse\DC2\GS\n\SIenableSensorMac\CAN\ENQ \SOH(\b:\EOTtrue\"5\n\ACKUptime\DC2\DC4\n\fgyridStartup\CAN\SOH \SOH(\SOH\DC2\NAK\n\rsystemStartup\CAN\STX \SOH(\SOH\"'\n\EOTInfo\DC2\DC1\n\ttimestamp\CAN\SOH \SOH(\SOH\DC2\f\n\EOTinfo\CAN\STX \SOH(\t\"[\n\vAntennaTurn\DC2\DC1\n\tsensorMac\CAN\SOH \SOH(\f\DC2\DC1\n\ttimestamp\CAN\STX \SOH(\STX\DC2\r\n\ENQangle\CAN\ETX \SOH(\STX\DC2\ETB\n\SIfixedTimeBuffer\CAN\EOT \SOH(\r\"\176\STX\n\vScanPattern\DC2)\n\ACKaction\CAN\SOH \SOH(\SO2\EM.Gyrid.ScanPattern.Action\DC2\DC1\n\tsensorMac\CAN\STX \SOH(\f\DC2\DC1\n\tstartTime\CAN\ETX \SOH(\r\DC2\DLE\n\bstopTime\CAN\EOT \SOH(\r\DC2\DC2\n\nstartAngle\CAN\ENQ \SOH(\r\DC2\DC1\n\tstopAngle\CAN\ACK \SOH(\r\DC2\DC1\n\tscanAngle\CAN\a \SOH(\r\DC2\NAK\n\rinquiryLength\CAN\b \SOH(\r\DC2\DC2\n\nbufferTime\CAN\t \SOH(\r\DC2\SYN\n\SOturnResolution\CAN\n \SOH(\r\"A\n\ACKAction\DC2\SO\n\nAction_ADD\DLE\SOH\DC2\DC1\n\rAction_REMOVE\DLE\STX\DC2\DC4\n\DLEAction_REMOVEALL\DLE\ETX\"\232\SOH\n\rStateScanning\DC2'\n\EOTtype\CAN\SOH \SOH(\SO2\EM.Gyrid.StateScanning.Type\DC2\DC1\n\ttimestamp\CAN\STX \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\ETX \SOH(\f\DC2+\n\ACKhwType\CAN\EOT \SOH(\SO2\ESC.Gyrid.StateScanning.HwType\"*\n\EOTType\DC2\DLE\n\fType_STARTED\DLE\SOH\DC2\DLE\n\fType_STOPPED\DLE\STX\"/\n\ACKHwType\DC2\DC4\n\DLEHwType_BLUETOOTH\DLE\SOH\DC2\SI\n\vHwType_WIFI\DLE\STX\"e\n\nStateGyrid\DC2$\n\EOTtype\CAN\SOH \SOH(\SO2\SYN.Gyrid.StateGyrid.Type\"1\n\EOTType\DC2\DC2\n\SOType_CONNECTED\DLE\SOH\DC2\NAK\n\DC1Type_DISCONNECTED\DLE\STX\"C\n\fStateAntenna\DC2\DC1\n\ttimestamp\CAN\SOH \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\STX \SOH(\f\DC2\r\n\ENQangle\CAN\ETX \SOH(\STX\"P\n\SYNBluetooth_StateInquiry\DC2\DC1\n\ttimestamp\CAN\SOH \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\STX \SOH(\f\DC2\DLE\n\bduration\CAN\ETX \SOH(\r\"\170\SOH\n\DLEBluetooth_DataIO\DC2\DC1\n\ttimestamp\CAN\STX \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\ETX \SOH(\f\DC2\f\n\EOThwid\CAN\EOT \SOH(\f\DC2\DC3\n\vdeviceclass\CAN\ENQ \SOH(\r\DC2*\n\EOTmove\CAN\ACK \SOH(\SO2\FS.Gyrid.Bluetooth_DataIO.Move\"!\n\EOTMove\DC2\v\n\aMove_IN\DLE\SOH\DC2\f\n\bMove_OUT\DLE\STX\"y\n\DC1Bluetooth_DataRaw\DC2\DC1\n\ttimestamp\CAN\SOH \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\STX \SOH(\f\DC2\f\n\EOThwid\CAN\ETX \SOH(\f\DC2\DC3\n\vdeviceclass\CAN\EOT \SOH(\r\DC2\f\n\EOTrssi\CAN\ENQ \SOH(\DC1\DC2\r\n\ENQangle\CAN\ACK \SOH(\r\"`\n\DC3WiFi_StateFrequency\DC2\DC1\n\ttimestamp\CAN\SOH \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\STX \SOH(\f\DC2\DC1\n\tfrequency\CAN\ETX \SOH(\r\DC2\DLE\n\bduration\CAN\EOT \SOH(\r\"d\n\ETBWiFi_StateFrequencyLoop\DC2\DC1\n\ttimestamp\CAN\SOH \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\STX \SOH(\f\DC2\DLE\n\bduration\CAN\ETX \SOH(\r\DC2\DC1\n\tfrequency\CAN\EOT \ETX(\r\"\225\SOH\n\vWiFi_DataIO\DC2%\n\EOTtype\CAN\SOH \SOH(\SO2\ETB.Gyrid.WiFi_DataIO.Type\DC2\DC1\n\ttimestamp\CAN\STX \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\ETX \SOH(\f\DC2\f\n\EOThwid\CAN\EOT \SOH(\f\DC2%\n\EOTmove\CAN\ENQ \SOH(\SO2\ETB.Gyrid.WiFi_DataIO.Move\"-\n\EOTType\DC2\DC4\n\DLEType_ACCESSPOINT\DLE\SOH\DC2\SI\n\vType_DEVICE\DLE\STX\"!\n\EOTMove\DC2\v\n\aMove_IN\DLE\SOH\DC2\f\n\bMove_OUT\DLE\STX\"e\n\SIWiFi_DataDevRaw\DC2\DC1\n\ttimestamp\CAN\SOH \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\STX \SOH(\f\DC2\f\n\EOThwid\CAN\ETX \SOH(\f\DC2\DC1\n\tfrequency\CAN\EOT \SOH(\r\DC2\v\n\ETXssi\CAN\ENQ \SOH(\DC1\"\168\b\n\fWiFi_DataRaw\DC2\DC1\n\ttimestamp\CAN\SOH \SOH(\SOH\DC2\DC1\n\tsensorMac\CAN\STX \SOH(\f\DC2\DC1\n\tfrequency\CAN\ETX \SOH(\r\DC2\SYN\n\apw_mgmt\CAN\EOT \SOH(\b:\ENQfalse\DC2\DC4\n\ENQretry\CAN\ENQ \SOH(\b:\ENQfalse\DC20\n\tframetype\CAN\ACK \SOH(\SO2\GS.Gyrid.WiFi_DataRaw.FrameType\DC2&\n\EOTmgmt\CAN\a \SOH(\v2\CAN.Gyrid.WiFi_DataRaw.Mgmt\DC2&\n\EOTctrl\CAN\b \SOH(\v2\CAN.Gyrid.WiFi_DataRaw.Ctrl\DC2&\n\EOTdata\CAN\t \SOH(\v2\CAN.Gyrid.WiFi_DataRaw.Data\DC2\r\n\ENQhwid1\CAN\n \SOH(\f\DC2\r\n\ENQhwid2\CAN\v \SOH(\f\DC2\v\n\ETXssi\CAN\f \SOH(\DC1\SUB&\n\EOTData\DC2\SI\n\afrom_ds\CAN\SOH \SOH(\b\DC2\r\n\ENQto_ds\CAN\STX \SOH(\b\SUBk\n\EOTCtrl\DC21\n\asubType\CAN\SOH \SOH(\SO2 .Gyrid.WiFi_DataRaw.Ctrl.SubType\"0\n\aSubType\DC2\DC2\n\SOSubType_PSPOLL\DLE\SOH\DC2\DC1\n\rSubType_OTHER\DLE\STX\SUB\253\ETX\n\EOTMgmt\DC21\n\asubType\CAN\SOH \SOH(\SO2 .Gyrid.WiFi_DataRaw.Mgmt.SubType\DC2/\n\ACKbeacon\CAN\STX \SOH(\v2\US.Gyrid.WiFi_DataRaw.Mgmt.Beacon\DC23\n\bprobeReq\CAN\ETX \SOH(\v2!.Gyrid.WiFi_DataRaw.Mgmt.ProbeReq\SUBa\n\ACKBeacon\DC22\n\EOTtype\CAN\SOH \SOH(\SO2$.Gyrid.WiFi_DataRaw.Mgmt.Beacon.Type\"#\n\EOTType\DC2\f\n\bType_ESS\DLE\SOH\DC2\r\n\tType_IBSS\DLE\STX\SUB\EM\n\bProbeReq\DC2\r\n\ENQhSsid\CAN\SOH \SOH(\f\"\221\SOH\n\aSubType\DC2\DC2\n\SOSubType_BEACON\DLE\SOH\DC2\NAK\n\DC1SubType_PROBERESP\DLE\STX\DC2\DC4\n\DLESubType_PROBEREQ\DLE\ETX\DC2\DC2\n\SOSubType_DEAUTH\DLE\EOT\DC2\DC1\n\rSubType_DISAS\DLE\ENQ\DC2\DLE\n\fSubType_ATIM\DLE\ACK\DC2\DC3\n\SISubType_ASSOREQ\DLE\a\DC2\DC4\n\DLESubType_ASSORESP\DLE\b\DC2\NAK\n\DC1SubType_REASSOREQ\DLE\t\DC2\SYN\n\DC2SubType_REASSORESP\DLE\n\"G\n\tFrameType\DC2\DC2\n\SOFrameType_MGMT\DLE\SOH\DC2\DC2\n\SOFrameType_CTRL\DLE\STX\DC2\DC2\n\SOFrameType_DATA\DLE\ETX")